name: Build and Deploy

on:
  push:
    branches: ["master"]

  workflow_dispatch:

# If a workflow run is in progress, cancel it
concurrency:
  group: production
  cancel-in-progress: true

env:
  NODE_ENV: production
  BUILD_PATH: .

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: '18'

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH to known hosts
        run: ssh-keyscan ${{ secrets.SSH_HOST }} >> /home/runner/.ssh/known_hosts

      - name: Check if SSH is working
        run: ssh -p ${{secrets.SSH_PORT}} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo 'SSH is working'"

      - name: Restore cached npm dependencies
        id: cache-dependencies-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
          key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm i

      - name: Cache npm dependencies
        id: cache-dependencies-save
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
          key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

      - name: Build
        run: pnpm run build

      - name: Make entry script executable
        run: chmod +x ./BlogWebExpressServer.sh

      # - name: Transfer and delete if not same
      #   run: |
      #     sudo rsync -e "ssh -i ${{secrets.SSH_PRIVATE_KEY}} -o ControlPath=$SSH_AUTH_SOCK" -av --delete dist/ --port=${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web
      #     sudo rsync -e "ssh -i ${{secrets.SSH_PRIVATE_KEY}} -o ControlPath=$SSH_AUTH_SOCK" -av --delete BlogWebExpressServer.sh --port=${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web
      #     sudo rsync -e "ssh -i ${{secrets.SSH_PRIVATE_KEY}} -o ControlPath=$SSH_AUTH_SOCK" -av --delete express.js --port=${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web

      # I have no idea why the above code doesn't work, but the below code works

      - name: Transfer and delete if not same
        run: |
          ssh -p ${{secrets.SSH_PORT}} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "rm -rf /root/blog-web/*"
          scp -P ${{secrets.SSH_PORT}} -r dist/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web
          scp -P ${{secrets.SSH_PORT}} BlogWebExpressServer.sh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web
          scp -P ${{secrets.SSH_PORT}} express.js ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/root/blog-web

      - name: Restart Express server
        run: |
          ssh -p ${{secrets.SSH_PORT}} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "systemctl restart blog-web.service"

    environment:
      name: nginx-deploy
      url: ${{ vars.DEPLOY_URL }}